{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/auth/error.interceptor.ts","webpack:///./src/app/auth/login.component.html","webpack:///./src/app/auth/login.component.ts","webpack:///./src/app/auth/login.service.ts","webpack:///./src/app/auth/register.component.html","webpack:///./src/app/auth/register.component.ts","webpack:///./src/app/element-list.component.html","webpack:///./src/app/element-list.component.ts","webpack:///./src/app/histogram/histogram.component.html","webpack:///./src/app/histogram/histogram.component.ts","webpack:///./src/app/histogram/histogram.service.ts","webpack:///./src/app/quote/formQuote.component.html","webpack:///./src/app/quote/formQuote.component.ts","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/app/quote/quote.service.ts","webpack:///./src/app/tabs/tab.model.ts","webpack:///./src/app/tabs/tab.service.ts","webpack:///./src/app/theme/formTheme.component.html","webpack:///./src/app/theme/formTheme.component.ts","webpack:///./src/app/theme/selectQuote.component.html","webpack:///./src/app/theme/selectQuote.component.ts","webpack:///./src/app/theme/theme.component.html","webpack:///./src/app/theme/theme.component.ts","webpack:///./src/app/theme/theme.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".example-large-box {\\r\\n  margin: 16px;\\r\\n  border-radius: 8px;\\r\\n  padding: 16px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin: 1rem;\\r\\n}\\r\\n\\r\\n.histogramButton {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.pdfButton {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.enterLoginBotton {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.search {\\r\\n  margin-left: 12%;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.upperBar {\\r\\n  background-color: mediumslateblue;\\r\\n  padding: 0.5rem;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n  z-index: 20;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\\r\\n.themeImage {\\r\\n  margin-top: 0.5rem;\\r\\n  border-radius: 8px;\\r\\n  width: 100%;\\r\\n  height: 5rem;\\r\\n}\\r\\n\\r\\n.delete {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  margin-right: 1rem;\\r\\n}\\r\\n\\r\\n.right-button {\\r\\n  float: right;\\r\\n  margin-right: 1rem;\\r\\n}\\r\\n\\r\\n.right-button-theme {\\r\\n  float: right;\\r\\n  margin-right: 0.5rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.inputFileButton {\\r\\n  width: 1.5rem;\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.element-list {\\r\\n  padding: 0.5rem;\\r\\n  background-color: #f1f6fa;\\r\\n}\\r\\n\\r\\n.tab {\\r\\n  background-color: mediumslateblue;\\r\\n  border-radius: 5px 5px 0 0;\\r\\n  border-top: 1px solid black;\\r\\n  border-left: 1px solid black;\\r\\n  border-right: 1px solid black;\\r\\n  padding: 0.5rem;\\r\\n  margin-left: 0.5rem;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\n.activeTab {\\r\\n  background-color: #9ab1fa;\\r\\n}\\r\\n\\r\\n.closeTab {\\r\\n  -webkit-transform: scale(0.75);\\r\\n          transform: scale(0.75);\\r\\n}\\r\\n\\r\\n.closeTab:hover {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  padding-top: 4rem;\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n.themeTitle {\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\n.authorAndBook {\\r\\n  background-color: #9ab1fa;\\r\\n  margin: 1rem;\\r\\n  border-radius: 8px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsZUFBZTtFQUNmLGVBQWU7RUFDZixNQUFNO0VBQ04sV0FBVztFQUNYLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsYUFBYTtBQUNmOztBQUVBO0VBQ0UsZUFBZTtFQUNmLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQywwQkFBMEI7RUFDMUIsMkJBQTJCO0VBQzNCLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtbGFyZ2UtYm94IHtcclxuICBtYXJnaW46IDE2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBtYXJnaW46IDFyZW07XHJcbn1cclxuXHJcbi5oaXN0b2dyYW1CdXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xyXG59XHJcblxyXG4ucGRmQnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMXJlbTtcclxufVxyXG5cclxuLmVudGVyTG9naW5Cb3R0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xyXG59XHJcblxyXG4uc2VhcmNoIHtcclxuICBtYXJnaW4tbGVmdDogMTIlO1xyXG4gIHdpZHRoOiA3NSU7XHJcbn1cclxuXHJcbi51cHBlckJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbWVkaXVtc2xhdGVibHVlO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDIwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1zZWN0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogNjBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtbWFyZ2luIHtcclxuICBtYXJnaW46IDAgMTBweDtcclxufVxyXG5cclxuLnRoZW1lSW1hZ2Uge1xyXG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA1cmVtO1xyXG59XHJcblxyXG4uZGVsZXRlIHtcclxuICBtYXJnaW4tbGVmdDogMXJlbTtcclxufVxyXG5cclxuLmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG4ucmlnaHQtYnV0dG9uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG4ucmlnaHQtYnV0dG9uLXRoZW1lIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG5cclxuLmlucHV0RmlsZUJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEuNXJlbTtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uZWxlbWVudC1saXN0IHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjZmYTtcclxufVxyXG5cclxuLnRhYiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbWVkaXVtc2xhdGVibHVlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCBibGFjaztcclxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBtYXJnaW4tbGVmdDogMC41cmVtO1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbi5hY3RpdmVUYWIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM5YWIxZmE7XHJcbn1cclxuXHJcbi5jbG9zZVRhYiB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjc1KTtcclxufVxyXG5cclxuLmNsb3NlVGFiOmhvdmVyIHtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgcGFkZGluZy10b3A6IDRyZW07XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4udGhlbWVUaXRsZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG59XHJcblxyXG4uYXV0aG9yQW5kQm9vayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzlhYjFmYTtcclxuICBtYXJnaW46IDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n<link\\r\\nhref=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\"\\r\\nrel=\\\"stylesheet\\\"\\r\\n/>\\r\\n\\r\\n<div class=\\\"upperBar\\\">\\r\\n\\r\\n  <div td-toolbar-content layout=\\\"row\\\" layout-align=\\\"start center\\\" flex>\\r\\n      <login class=\\\"right-button\\\" style=\\\"margin-right: 2rem\\\"></login>\\r\\n  </div>\\r\\n\\r\\n  <button mat-mini-fab color=\\\"accent\\\" (click)=\\\"register()\\\" >\\r\\n    <mat-icon matSuffix>\\r\\n      add\\r\\n    </mat-icon>\\r\\n  </button>\\r\\n\\r\\n  <div style=\\\"display: inline; padding: 0.1rem;\\\">\\r\\n\\r\\n    <button mat-icon-button [routerLink]=\\\"['/']\\\">\\r\\n      <mat-icon>home</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <span *ngFor = \\\"let tab of tabService.tabs\\\">\\r\\n\\r\\n      <div class=\\\"mat-elevation-z4 tab activeTab\\\" style=\\\"display: inline\\\" *ngIf=\\\"tab.active\\\">\\r\\n\\r\\n        <div [routerLink]=\\\"[tab.type, tab.id]\\\" style=\\\"display: inline; cursor: pointer;\\\">\\r\\n          <span *ngIf=\\\"(tab.type==='theme')\\\">\\r\\n              Tema {{tab.id}}\\r\\n          </span>\\r\\n          <span *ngIf=\\\"(tab.type==='quote')\\\">\\r\\n              Cita {{tab.id}}\\r\\n          </span>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"closeTab\\\" [routerLink]=\\\"['/']\\\" mat-icon-button (click)=\\\"tabService.removeTab(tab.type, tab.id)\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"mat-elevation-z4 tab\\\" style=\\\"display: inline\\\" *ngIf=\\\"!tab.active\\\">\\r\\n\\r\\n        <div [routerLink]=\\\"[tab.type, tab.id]\\\" style=\\\"display: inline; cursor: pointer;\\\" *ngIf=\\\"(tab.type==='theme')\\\">\\r\\n          Tema {{tab.id}}\\r\\n        </div>\\r\\n        <div [routerLink]=\\\"[tab.type, tab.id]\\\" style=\\\"display: inline; cursor: pointer;\\\" *ngIf=\\\"(tab.type==='quote')\\\">\\r\\n          Cita {{tab.id}}\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"closeTab\\\" mat-icon-button (click)=\\\"tabService.removeTab(tab.type, tab.id)\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { LoginService } from './auth/login.service';\r\nimport { Component } from '@angular/core';\r\nimport { TabService } from './tabs/tab.service';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [\r\n    './app.component.css'\r\n  ]\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private tabService: TabService) {}\r\n\r\n  logout() {\r\n    this.loginService.logOut();\r\n  }\r\n\r\n  register() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Angular Material\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n// For the histogram\r\nimport { CovalentCommonModule, CovalentLayoutModule, CovalentMediaModule, CovalentExpansionPanelModule,\r\n  CovalentStepsModule, CovalentLoadingModule, CovalentDialogsModule, CovalentSearchModule, CovalentPagingModule,\r\n  CovalentNotificationsModule, CovalentMenuModule, CovalentDataTableModule, CovalentMessageModule } from '@covalent/core';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { routing } from './app.routing';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { ThemeComponent } from './theme/theme.component';\r\nimport { ThemeService } from './theme/theme.service';\r\nimport { FormThemeComponent } from './theme/formTheme.component';\r\nimport { SelectQuoteComponent } from './theme/selectQuote.component';\r\n\r\nimport { QuoteComponent } from './quote/quote.component';\r\nimport { QuoteService } from './quote/quote.service';\r\nimport { FormQuoteComponent } from './quote/formQuote.component';\r\n\r\nimport { LoginComponent } from './auth/login.component';\r\nimport { LoginService } from './auth/login.service';\r\n\r\nimport { RegisterComponent } from './auth/register.component';\r\n\r\nimport { ElementListComponent } from './element-list.component';\r\n\r\nimport { TabService } from './tabs/tab.service';\r\n\r\nimport { HistogramComponent } from './histogram/histogram.component';\r\nimport { HistogramService } from './histogram/histogram.service';\r\nimport { BasicAuthInterceptor } from './auth/auth.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ElementListComponent,\r\n    ThemeComponent,\r\n    QuoteComponent,\r\n    FormQuoteComponent,\r\n    FormThemeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HistogramComponent,\r\n    SelectQuoteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    routing,\r\n    CovalentCommonModule, CovalentLayoutModule, CovalentMediaModule, CovalentExpansionPanelModule,\r\n    CovalentStepsModule, CovalentLoadingModule, CovalentDialogsModule, CovalentSearchModule, CovalentPagingModule,\r\n    CovalentNotificationsModule, CovalentMenuModule, CovalentDataTableModule, CovalentMessageModule,\r\n    NgxChartsModule, FormsModule, ReactiveFormsModule\r\n  ],\r\n  providers: [ThemeService, QuoteService, LoginService, HistogramService, TabService,\r\n      { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n      { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n      { provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {}\r\n","import { SelectQuoteComponent } from './theme/selectQuote.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ElementListComponent } from './element-list.component';\r\nimport { ThemeComponent } from './theme/theme.component';\r\nimport { QuoteComponent } from './quote/quote.component';\r\nimport { RegisterComponent } from './auth/register.component';\r\nimport { FormQuoteComponent } from './quote/formQuote.component';\r\nimport { FormThemeComponent } from './theme/formTheme.component';\r\nimport { HistogramComponent } from './histogram/histogram.component';\r\n\r\nconst appRoutes = [\r\n  { path: '' , component: ElementListComponent  },\r\n  { path: 'theme/:id', component: ThemeComponent  },\r\n  { path: 'newTheme', component: FormThemeComponent  },\r\n  { path: 'theme/edit/:id', component: FormThemeComponent },\r\n  { path: 'theme/selectQuote/:id', component: SelectQuoteComponent},\r\n  { path: 'quote/:id', component: QuoteComponent  },\r\n  { path: 'newQuote', component: FormQuoteComponent  },\r\n  { path: 'quote/edit/:id', component: FormQuoteComponent  },\r\n  { path: 'register', component: RegisterComponent  },\r\n  { path: 'histogram', component: HistogramComponent  }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Strategy based on http://jasonwatmore.com/post/2018/09/07/angular-6-basic-http-authentication-tutorial-example\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        // add authorization header with basic auth credentials if available\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        \r\n        if (user && user.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${user.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n \r\n    constructor(private loginService: LoginService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            \r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.loginService.removeCurrentUser();\r\n                //location.reload(true);\r\n            }\r\n            \r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","module.exports = \"\\r\\n<div *ngIf=\\\"!loginService.isLogged\\\">\\r\\n  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"openLoginDialog()\\\">\\r\\n    <mat-icon>supervised_user_circle</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"loginService.isLogged\\\">\\r\\n  <span style=\\\"margin-right: 1rem\\\">\\r\\n    {{loginService.user.name}}\\r\\n  </span>\\r\\n  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"logOut()\\\">\\r\\n    <mat-icon>remove</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #loginDialog let-dialogRef=\\\"dialogRef\\\">\\r\\n\\r\\n<div layout=\\\"column\\\" layout-fill>\\r\\n\\r\\n  <h2 mat-dialog-title style=\\\"text-align: center\\\">\\r\\n    LogIn\\r\\n  </h2>\\r\\n\\r\\n  <mat-dialog-content style=\\\"text-align: center\\\">\\r\\n    <form #loginForm=\\\"ngForm\\\" (keyup.enter)=\\\"logIn($event, userElement.value, passElement.value)\\\">\\r\\n\\r\\n      <div layout=\\\"row\\\">\\r\\n        <mat-form-field flex>\\r\\n          <input matInput #userElement #userControl=\\\"ngModel\\\" placeholder=\\\"Usuario\\\" type=\\\"text\\\"\\r\\n            maxlength=\\\"30\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required>\\r\\n          <span matPrefix>\\r\\n            <mat-icon>person</mat-icon>\\r\\n          </span>\\r\\n          <mat-hint>\\r\\n            <span [hidden]=\\\"!userControl.errors?.required || userControl.pristine\\\"\\r\\n              class=\\\"tc-red-600\\\">Required</span>\\r\\n          </mat-hint>\\r\\n          <mat-hint>{{userElement.value.length}} / 30</mat-hint>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div layout=\\\"row\\\">\\r\\n        <mat-form-field flex>\\r\\n          <input matInput #passElement #passControl=\\\"ngModel\\\" placeholder=\\\"Contraseña\\\" type=\\\"password\\\"\\r\\n            name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\r\\n          <span matPrefix>\\r\\n            <mat-icon>lock</mat-icon>\\r\\n          </span>\\r\\n          <mat-hint>\\r\\n            <span [hidden]=\\\"!passControl.errors?.required || passControl.pristine\\\"\\r\\n              class=\\\"tc-red-600\\\">Required</span>\\r\\n          </mat-hint>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <div style=\\\"margin-top: 2rem; text-align: center;\\\">\\r\\n    <button type=\\\"button\\\" mat-button color=\\\"accent\\\" class=\\\"text-upper\\\" (click)=\\\"logIn($event, userElement.value, passElement.value)\\\">Login</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n</ng-template>\\r\\n\"","import { Component, ViewChild, TemplateRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent {\r\n    @ViewChild('loginDialog') loginDialog: TemplateRef<any>;\r\n    dialogRef: MatDialogRef<any, any>;\r\n\r\n    constructor(public dialog: MatDialog, private router: Router, private loginService: LoginService) {}\r\n\r\n    logIn(event: any, user: string, pass: string) {\r\n        event.preventDefault();\r\n\r\n        this.loginService.logIn(user, pass).subscribe(\r\n            (u) => {\r\n                console.log(u);\r\n                this.router.navigate(['/']);\r\n                this.dialogRef.close();\r\n            },\r\n            (error) => alert('Invalid user or password'),\r\n        );\r\n    }\r\n\r\n    logOut() {\r\n        this.loginService.logOut().subscribe(\r\n            (response) => {\r\n                this.router.navigate(['/']);\r\n            },\r\n            (error) => console.log('Error when trying to log out: ' + error),\r\n        );\r\n    }\r\n\r\n    openLoginDialog() {\r\n        this.dialogRef = this.dialog.open(this.loginDialog, {\r\n            width: '50%',\r\n            height: '50%',\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst URL = '/api';\r\n\r\nexport interface User {\r\n    id?: number;\r\n    name: string;\r\n    roles: string[];\r\n    authdata: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    isLogged = false;\r\n    isAdmin = false;\r\n    user: User;\r\n    auth: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (user) {\r\n            this.setCurrentUser(user);\r\n        }\r\n    }\r\n\r\n    logIn(user: string, pass: string) {\r\n\r\n        let auth = window.btoa(user + ':' + pass);\r\n\r\n        const headers = new HttpHeaders({\r\n            Authorization: 'Basic ' + auth,\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n        });\r\n\r\n        return this.http.get<User>('/api/user/login', { headers })\r\n            .pipe(map(user => {\r\n\r\n                if (user) {\r\n                    this.setCurrentUser(user);\r\n                    user.authdata = auth;\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                }\r\n\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logOut() {\r\n        return this.http.get('/api/user/logout').pipe(\r\n            map(response => {\r\n                this.removeCurrentUser();\r\n                return response;\r\n            }),\r\n        );\r\n    }\r\n\r\n    saveUser(user: User): Observable<User> {\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append('name', user.name);\r\n      formData.append('authdata', user.authdata);\r\n\r\n      return this.http.post<User>('/api/user/register', formData);\r\n\r\n    }\r\n\r\n    private setCurrentUser(user: User) {\r\n        this.isLogged = true;\r\n        this.user = user;\r\n        this.isAdmin = this.user.roles.indexOf('ROLE_ADMIN') !== -1;\r\n    }\r\n\r\n    removeCurrentUser() {\r\n        localStorage.removeItem('currentUser');\r\n        this.isLogged = false;\r\n        this.isAdmin = false;\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div *ngIf=\\\"user\\\">\\r\\n    <mat-card class=\\\"card\\\" >\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Registro\\\">\\r\\n          <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n              <form #userForm=\\\"ngForm\\\">\\r\\n                  <mat-card class=\\\"card\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre\\\" [(ngModel)]=\\\"user.name\\\" #userFormElement\\r\\n                      #userFormControl=\\\"ngModel\\\"\\r\\n                      name=\\\"name\\\"\\r\\n                      required>\\r\\n                    </mat-form-field>\\r\\n                  </mat-card>\\r\\n                  <mat-card class=\\\"card\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"Contraseña\\\" [(ngModel)]=\\\"user.authdata\\\" #userFormElement\\r\\n                      #userFormControl=\\\"ngModel\\\"\\r\\n                      name=\\\"password\\\"\\r\\n                      required>\\r\\n                    </mat-form-field>\\r\\n                  </mat-card>\\r\\n              </form>\\r\\n              <div  layout=\\\"row\\\" layout-align=\\\"end center\\\" class=\\\"enterLoginBotton\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"save()\\\"  [disabled]=\\\"userForm === undefined || (userForm && !userForm.valid)\\\">\\r\\n                  Registrar <mat-icon>assignment</mat-icon>\\r\\n                </button>\\r\\n                <button mat-raised-button class=\\\"button\\\" color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\r\\n              </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User, LoginService } from './login.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './register.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class RegisterComponent {\r\n\r\n  newUser: boolean;\r\n  user: User;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    activatedRoute: ActivatedRoute,\r\n    private service: LoginService) {\r\n        this.user = { name: '', roles: ['user'], authdata: ''};\r\n        this.newUser = true;\r\n  }\r\n\r\n  cancel() {\r\n      window.history.back();\r\n  }\r\n\r\n  save() {\r\n      this.service.saveUser(this.user).subscribe(\r\n          _ => {},\r\n          (error: Error) => console.error('Error creating new user: ' + error),\r\n      );\r\n      window.history.back();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<body>\\r\\n  <div class=\\\"search\\\">\\r\\n    <mat-form-field\\r\\n      appearance=\\\"outline\\\"\\r\\n      style=\\\"width:100%\\\"\\r\\n      (keyup.enter)=\\\"search(searchName)\\\"\\r\\n    >\\r\\n      <mat-label>Buscador</mat-label>\\r\\n      <input matInput [(ngModel)]=\\\"searchName\\\" />\\r\\n      <mat-icon matSuffix (click)=\\\"search(searchName)\\\" style=\\\"cursor: pointer\\\"\\r\\n        >search</mat-icon\\r\\n      >\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <mat-card class=\\\"card\\\" style=\\\"margin-top: -1rem\\\">\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Temas\\\">\\r\\n          <div *ngFor=\\\"let theme of themes\\\">\\r\\n            <mat-card class=\\\"card element-list\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"loginService.isLogged\\\"\\r\\n                style=\\\"padding: 0.7rem; cursor: pointer;\\\"\\r\\n                [routerLink]=\\\"['/theme', theme.id]\\\"\\r\\n                (click)=\\\"tabService.addTab('theme', theme.id)\\\"\\r\\n              >\\r\\n                {{ theme.name }}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!loginService.isLogged\\\" style=\\\"padding: 0.7rem\\\">\\r\\n                {{ theme.name }}\\r\\n              </div>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"text-align: center\\\">\\r\\n            <p *ngIf=\\\"themes.length === 0\\\" style=\\\"margin: 2rem\\\">\\r\\n              Ningún resultado\\r\\n            </p>\\r\\n          </div>\\r\\n\\r\\n          <mat-progress-bar *ngIf=\\\"spinner\\\"  mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\\r\\n          <div style=\\\"margin-top: 2rem; text-align: center\\\">\\r\\n              <button *ngIf=\\\"loadMoreThemes\\\" mat-mini-fab color=\\\"primary\\\" style=\\\"margin-right: 1rem\\\"\\r\\n              [matBadge]=\\\"remainingThemes\\\"  matBadgeColor=\\\"accent\\\">\\r\\n                  <mat-icon matSuffix (click)=\\\"showThemesByPage(pageThemes + 1)\\\">\\r\\n                    more_horiz\\r\\n                  </mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button *ngIf=\\\"pageThemes !== 0\\\" mat-mini-fab color=\\\"primary\\\">\\r\\n                  <mat-icon matSuffix (click)=\\\"loadLessThemes()\\\">\\r\\n                    keyboard_capslock\\r\\n                  </mat-icon>\\r\\n                </button>\\r\\n\\r\\n            <button\\r\\n              mat-mini-fab\\r\\n              color=\\\"primary\\\"\\r\\n              style=\\\"margin-left: 1rem\\\"\\r\\n              *ngIf=\\\"loginService.isAdmin\\\"\\r\\n\\r\\n            >\\r\\n              <mat-icon (click)=\\\"newTheme()\\\">add</mat-icon>\\r\\n            </button>\\r\\n\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab label=\\\"Citas\\\">\\r\\n          <div *ngFor=\\\"let quote of quotes\\\">\\r\\n            <mat-card class=\\\"card element-list\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"loginService.isLogged\\\"\\r\\n                style=\\\"padding: 0.7rem; cursor: pointer;\\\"\\r\\n                [routerLink]=\\\"['/quote', quote.id]\\\"\\r\\n                (click)=\\\"tabService.addTab('quote', quote.id)\\\"\\r\\n              >\\r\\n                {{ quote.quote }}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!loginService.isLogged\\\" style=\\\"padding: 0.7rem\\\">\\r\\n                {{ quote.quote }}\\r\\n              </div>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"text-align: center\\\">\\r\\n            <p *ngIf=\\\"quotes.length === 0\\\" style=\\\"margin: 2rem\\\">\\r\\n              Ningún resultado\\r\\n            </p>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"margin-top: 2rem; text-align: center\\\">\\r\\n            <button *ngIf=\\\"loadMoreQuotes\\\" mat-mini-fab color=\\\"primary\\\" style=\\\"margin-right: 1rem\\\"\\r\\n            [matBadge]=\\\"remainingQuotes\\\"  matBadgeColor=\\\"accent\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"showQuotesByPage(pageQuotes + 1)\\\">\\r\\n                more_horiz\\r\\n              </mat-icon>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"pageQuotes !== 0\\\" mat-mini-fab color=\\\"primary\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"loadLessQuotes()\\\">\\r\\n                keyboard_capslock\\r\\n              </mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              mat-mini-fab\\r\\n              color=\\\"primary\\\"\\r\\n              style=\\\"margin-left: 1rem\\\"\\r\\n              *ngIf=\\\"loginService.isAdmin\\\"\\r\\n            >\\r\\n              <mat-icon (click)=\\\"newQuote()\\\" >add</mat-icon>\\r\\n            </button>\\r\\n\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"histogramButton\\\" style=\\\"text-align: center; margin: 1rem;\\\">\\r\\n    <button [routerLink]=\\\"['/histogram']\\\" mat-raised-button color=\\\"primary\\\">\\r\\n      Histograma\\r\\n      <mat-icon>bar_chart</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { LoginService } from './auth/login.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Theme } from './theme/theme.model';\r\nimport { ThemeService } from './theme/theme.service';\r\n\r\nimport { Quote } from './quote/quote.model';\r\nimport { QuoteService } from './quote/quote.service';\r\n\r\nimport { TabService } from './tabs/tab.service';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\n\r\n@Component({\r\n  templateUrl: './element-list.component.html',\r\n  styleUrls: [\r\n    './app.component.css'\r\n  ]\r\n})\r\n\r\nexport class ElementListComponent implements OnInit {\r\n\r\n  themes: Theme[];\r\n  quotes: Quote[];\r\n\r\n  restThemes: number;\r\n  restQuotes: string;\r\n\r\n  searchName: string;\r\n  pageSize: number;\r\n  pageThemes: number;\r\n  pageQuotes: number;\r\n\r\n  themesSize: number;\r\n  quotesSize: number;\r\n\r\n  remainingQuotes: number;\r\n  loadMoreQuotes: boolean;\r\n\r\n  remainingThemes: number;\r\n  loadMoreThemes: boolean;\r\n\r\n  spinner = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private themeService: ThemeService,\r\n    private quoteService: QuoteService,\r\n    private loginService: LoginService,\r\n    private tabService: TabService) {}\r\n\r\n  ngOnInit() {\r\n    this.resetPages();\r\n    this.showAllThemesAndQuotes();\r\n\r\n    // Pages size and matBadge init\r\n    this.getQuotesSize();\r\n    this.getThemesSize();\r\n    this.pageSize = 6;\r\n    this.loadMoreQuotes = true;\r\n    //console.log(this.quotesSize);\r\n    //console.log(this.pageSize)\r\n  }\r\n\r\n  resetPages() {\r\n    this.pageThemes = 0;\r\n    this.pageQuotes = 0;\r\n  }\r\n\r\n  loadLessQuotes() {\r\n    this.pageQuotes = 0;\r\n    this.loadMoreQuotes = true;\r\n    this.showFirstQuotes();\r\n    this.getRemainingQuotes();\r\n  }\r\n\r\n  loadLessThemes() {\r\n    this.pageThemes = 0;\r\n    this.loadMoreThemes = true;\r\n    this.showFirstThemes();\r\n    this.getRemainingQuotes();\r\n  }\r\n\r\n  search(name: string) {\r\n    this.resetPages();\r\n    if (name !== '') {\r\n    this.themeService.searchTheme(name)\r\n      .subscribe((data: Theme[]) => this.themes = data['content']\r\n    );\r\n    this.quoteService.searchQuote(name)\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n    } else {\r\n      this.showAllThemesAndQuotes();\r\n    }\r\n  }\r\n\r\n  showQuotesByPage(page: number) {\r\n    if (page !== 0) {\r\n    this.themeService.getThemes()\r\n      .subscribe((data: Theme[]) => this.themes = data['content']\r\n    );\r\n    this.quoteService.getQuotesByPage(page)\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n    } else {\r\n      this.showAllThemesAndQuotes();\r\n    }\r\n    this.pageQuotes++;\r\n    this.getRemainingQuotes();\r\n  }\r\n\r\n  showThemesByPage(page: number) {\r\n    this.spinner = true;\r\n    if (page !== 0) {\r\n    this.themeService.getThemesByPage(page)\r\n      .subscribe((data: Theme[]) => this.themes = data['content']\r\n    );\r\n    this.quoteService.getQuotes()\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n    } else {\r\n      this.showAllThemesAndQuotes();\r\n    }\r\n    this.pageThemes++;\r\n    this.getRemainingThemes();\r\n  }\r\n\r\n  showAllThemesAndQuotes() {\r\n    this.themeService.getThemes()\r\n      .subscribe((data: Theme[]) => {\r\n      this.themes = data['content'];}\r\n    );\r\n    this.quoteService.getQuotes()\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n\r\n    this.getRemainingQuotes();\r\n    this.getRemainingThemes();\r\n  }\r\n\r\n  showFirstThemes() {\r\n    this.themeService.getThemes()\r\n      .subscribe((data: Theme[]) => { this.themes = data['content']; }\r\n    );\r\n\r\n    this.getRemainingQuotes();\r\n  }\r\n\r\n  showFirstQuotes() {\r\n    this.quoteService.getQuotes()\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n\r\n    this.getRemainingThemes();\r\n  }\r\n\r\n  newTheme() {\r\n    this.router.navigate(['/newTheme']);\r\n  }\r\n\r\n  newQuote() {\r\n    this.router.navigate(['/newQuote']);\r\n  }\r\n\r\n  getThemesSize() {\r\n    this.themeService.getSize()\r\n      .subscribe((data: number) => {\r\n        this.themesSize = data;\r\n        this.getRemainingThemes();\r\n      }\r\n    );\r\n  }\r\n\r\n  getQuotesSize() {\r\n    this.quoteService.getSize()\r\n      .subscribe((data: number) => {\r\n        this.quotesSize = data;\r\n        this.getRemainingQuotes();\r\n      }\r\n    );\r\n  }\r\n\r\n  getRemainingQuotes() {\r\n    const op = this.quotesSize - this.pageSize - (this.pageSize * this.pageQuotes);\r\n    this.remainingQuotes = (op > 0) ?  op : 0;\r\n    this.loadMoreQuotes = this.remainingQuotes !== 0;\r\n  }\r\n\r\n  getRemainingThemes() {\r\n    const op = this.themesSize - this.pageSize - (this.pageSize * this.pageThemes);\r\n    this.remainingThemes = (op > 0) ?  op : 0;\r\n    this.loadMoreThemes = this.remainingThemes !== 0;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div>\\r\\n    <mat-card class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n      <mat-card-title style=\\\"padding: 1rem\\\">\\r\\n        <div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n          <span flex>Citas por tema</span>\\r\\n        </div>\\r\\n      </mat-card-title>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <div class=\\\"pad\\\">\\r\\n        <div style=\\\"height: 25rem; padding: 0.5rem;\\\">\\r\\n          <ngx-charts-bar-vertical-2d\\r\\n            [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n            [results]=\\\"histogram\\\"\\r\\n            [barPadding]=\\\"8\\\"\\r\\n            [groupPadding]=\\\"8\\\"\\r\\n            [gradient]=\\\"true\\\"\\r\\n            [xAxis]=\\\"true\\\"\\r\\n            [yAxis]=\\\"true\\\"\\r\\n            [legend]=\\\"false\\\"\\r\\n            [showXAxisLabel]=\\\"false\\\"\\r\\n            [showYAxisLabel]=\\\"false\\\">\\r\\n          </ngx-charts-bar-vertical-2d>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n<body>\\r\\n\"","import { Component, ChangeDetectorRef, AfterViewInit, ViewChild, TemplateRef, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry, MatDialog } from '@angular/material';\r\nimport { TdMediaService, TdDigitsPipe, TdLayoutManageListComponent } from '@covalent/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { HistogramService } from './histogram.service';\r\n\r\n@Component({\r\n  templateUrl: './histogram.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class HistogramComponent implements AfterViewInit, OnInit {\r\n\r\n  histogram: any[];\r\n\r\n  @ViewChild('manageList') manageList: TdLayoutManageListComponent;\r\n  @ViewChild('dialogContent') template: TemplateRef<any>;\r\n\r\n  name = 'UI Platform';\r\n\r\n  miniNav: boolean = false;\r\n\r\n  // Theme toggle\r\n  get activeTheme(): string {\r\n    return localStorage.getItem('theme');\r\n  }\r\n  theme(theme: string): void {\r\n    localStorage.setItem('theme', theme);\r\n  }\r\n\r\n  // Dialog\r\n  config = {width: '50%', height: '50%'};\r\n\r\n  constructor(public media: TdMediaService,\r\n              public dialog: MatDialog,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _iconRegistry: MatIconRegistry,\r\n              private _domSanitizer: DomSanitizer,\r\n              private histogramService: HistogramService) {\r\n              }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._iconRegistry.addSvgIconInNamespace('assets', 'covalent',\r\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\r\n      'https://raw.githubusercontent.com/Teradata/covalent-quickstart/develop/src/assets/icons/covalent.svg'));\r\n\r\n    this.histogramService.getHistogram().subscribe((data: any[]) => {\r\n      this.histogram = data['histogram'];\r\n      Object.assign(this, this.histogram);\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // broadcast to all listener observables when loading the page\r\n    this.media.broadcast();\r\n    this._changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  openTemplate() {\r\n    this.dialog.open(this.template, this.config);\r\n  }\r\n\r\n  // NGX Charts Axis\r\n  axisDigits(val: any): any {\r\n    return new TdDigitsPipe().transform(val);\r\n  }\r\n\r\n  axisDate(val: string): string {\r\n    return new DatePipe('en').transform(val, 'hh a');\r\n  }\r\n\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class HistogramService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getHistogram(): any {\r\n    return this.http.get('/api/histogram');\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div *ngIf=\\\"quote\\\">\\r\\n    <mat-card class=\\\"card\\\" >\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Citas\\\">\\r\\n          <form #quoteForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n              <mat-card class=\\\"card\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Cita\\\" [(ngModel)]=\\\"quote.quote\\\" #quoteFormElement\\r\\n                  #quoteFormControl=\\\"ngModel\\\"\\r\\n                  name=\\\"quote\\\"\\r\\n                  required>\\r\\n                </mat-form-field>\\r\\n              </mat-card>\\r\\n              <mat-card class=\\\"card\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Autor\\\" [(ngModel)]=\\\"quote.author\\\" #quoteFormElement\\r\\n                  #quoteFormControl=\\\"ngModel\\\"\\r\\n                  name=\\\"author\\\"\\r\\n                  required>\\r\\n                </mat-form-field>\\r\\n              </mat-card>\\r\\n              <mat-card class=\\\"card\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Obra\\\" [(ngModel)]=\\\"quote.book\\\" #quoteFormElement\\r\\n                  #quoteFormControl=\\\"ngModel\\\"\\r\\n                  name=\\\"book\\\"\\r\\n                  required>\\r\\n                </mat-form-field>\\r\\n              </mat-card>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div  layout=\\\"row\\\" layout-align=\\\"end center\\\" class=\\\"enterLoginBotton\\\">\\r\\n            <button mat-raised-button class=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"quoteForm === undefined || (quoteForm && !quoteForm.valid)\\\">\\r\\n              Guardar <mat-icon>save</mat-icon>\\r\\n            </button>\\r\\n            <button mat-raised-button class=\\\"button\\\" color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","import { QuoteService } from './quote.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Quote } from './quote.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './formQuote.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class FormQuoteComponent {\r\n\r\n  newQuote: boolean;\r\n  quote: Quote;\r\n\r\n    constructor(\r\n      private _router: Router,\r\n      activatedRoute: ActivatedRoute,\r\n      private service: QuoteService) {\r\n        const id = activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n          this.service.getQuote(id)\r\n          .subscribe((data: Quote) => this.quote = {\r\n            id: data['id'],\r\n            quote: data['quote'],\r\n            author: data['author'],\r\n            book: data['book']\r\n          }\r\n        );\r\n          this.newQuote = false;\r\n        } else {\r\n          this.quote = { quote: '', author: '', book: ''};\r\n          this.newQuote = true;\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.service.saveQuote(this.quote).subscribe(\r\n            _ => {},\r\n            (error: Error) => console.error('Error creating new theme: ' + error),\r\n        );\r\n        window.history.back();\r\n    }\r\n\r\n}\r\n\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div>\\r\\n    <mat-card class=\\\"card\\\" >\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Citas\\\">\\r\\n          <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n\\r\\n            <mat-card *ngIf=\\\"!edit\\\" class=\\\"card\\\">\\r\\n              {{quote.quote}}\\r\\n            </mat-card>\\r\\n            <mat-card *ngIf=\\\"!edit\\\" class=\\\"card\\\">\\r\\n              {{quote.author}}\\r\\n            </mat-card>\\r\\n            <mat-card *ngIf=\\\"!edit\\\" class=\\\"card\\\">\\r\\n              {{quote.book}}\\r\\n            </mat-card>\\r\\n\\r\\n            <form (keyup.enter)=\\\"save()\\\">\\r\\n              <mat-card *ngIf=\\\"edit\\\" class=\\\"card\\\">\\r\\n                <input style=\\\"font-size: 1rem; width: 99%;\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card *ngIf=\\\"edit\\\" class=\\\"card\\\">\\r\\n                <input style=\\\"font-size: 1rem; width: 99%;\\\" type=\\\"text\\\" [(ngModel)]=\\\"author\\\" name=\\\"author\\\">\\r\\n              </mat-card>\\r\\n\\r\\n              <mat-card *ngIf=\\\"edit\\\" class=\\\"card\\\">\\r\\n                <input style=\\\"font-size: 1rem; width: 99%;\\\" type=\\\"text\\\" [(ngModel)]=\\\"book\\\" name=\\\"book\\\">\\r\\n              </mat-card>\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <button mat-mini-fab color=\\\"warn\\\" class=\\\"right-button\\\" (click)=\\\"removeTheme()\\\" >\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"edit\\\" mat-mini-fab color=\\\"primary\\\" class=\\\"right-button\\\" (click)=\\\"save()\\\">\\r\\n              <mat-icon>border_color</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"!edit\\\" mat-mini-fab color=\\\"primary\\\" class=\\\"right-button\\\" (click)=\\\"editQuote()\\\">\\r\\n              <mat-icon>border_color</mat-icon>\\r\\n            </button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TdDialogService } from '@covalent/core';\r\n\r\nimport { Quote } from './quote.model';\r\nimport { QuoteService } from './quote.service';\r\n\r\n@Component({\r\n  templateUrl: './quote.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class QuoteComponent implements OnInit {\r\n\r\n  quote: Quote;\r\n  edit = false;\r\n  name: string;\r\n  author: string;\r\n  book: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private quoteService: QuoteService,\r\n    private _dialogService: TdDialogService,\r\n    private activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      let id = params['id'];\r\n      this.quoteService.getQuote(id)\r\n        .subscribe((data: Quote) => {\r\n          this.quote = {\r\n            id: data['id'],\r\n            quote: data['quote'],\r\n            author: data['author'],\r\n            book: data['book']\r\n          };\r\n          this.name = this.quote.quote;\r\n          this.author = this.quote.author;\r\n          this.book = this.quote.book;\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  removeTheme() {\r\n    this._dialogService.openConfirm({\r\n        message: '¿ Seguro que desea eliminar la cita ' + this.quote.id + '?',\r\n        title: 'Confirmación',\r\n        width: '500px',\r\n        height: '175px'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n        if (accept) {\r\n            this.quoteService\r\n                .removeQuote(this.quote)\r\n                .subscribe((_) => this.router.navigate(['/']), (error) => console.error(error));\r\n        }\r\n    });\r\n  }\r\n\r\n\r\n  editQuote() {\r\n    this.edit = true;\r\n  }\r\n\r\n  save() {\r\n    if ((this.name !== '') && (this.author !== '') && (this.book !== '')) {\r\n      this.edit = false;\r\n      this.quote.quote = this.name;\r\n      this.quote.author =this.author;\r\n      this.quote.book = this.book;\r\n      this.quoteService.saveQuote(this.quote).subscribe(\r\n          _ => {},\r\n          (error: Error) => console.error('Error creating new theme: ' + error),\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Quote } from './quote.model';\r\n\r\n@Injectable()\r\nexport class QuoteService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getQuotes() {\r\n    return this.http.get('/api/quotes/');\r\n  }\r\n\r\n  getSize() {\r\n    return this.http.get('/api/quotes/size');\r\n  }\r\n\r\n  getQuotesByPage(page: number) {\r\n    return this.http.get('/api/quotes/?page=' + page);\r\n  }\r\n\r\n  getQuote(id: number) {\r\n    return this.http.get('/api/quotes/' + id);\r\n  }\r\n\r\n  searchQuote(name: string) {\r\n    return this.http.get('/api/quotes/search/' + name);\r\n  }\r\n\r\n  saveQuote(quote: Quote): Observable<Quote> {\r\n    const body = JSON.stringify(quote);\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n\r\n    if (!quote.id) {\r\n      return this.http.post<Quote>('/api/quotes/', body, { headers });\r\n    } else {\r\n      return this.http.put<Quote>('/api/quotes/' + quote.id, body, { headers });\r\n    }\r\n\r\n  }\r\n\r\n  removeQuote(quote: Quote): Observable<Quote> {\r\n    return this.http.delete<Quote>('/api/quotes/' + quote.id);\r\n  }\r\n\r\n}\r\n","\r\nexport class Tab {\r\n\r\n  constructor(private _type: string, private _id: number) {}\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  get active(): boolean {\r\n    return (window.location.href.includes(this.type + '/' + String(this.id)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Tab } from './tab.model';\r\nimport { LoginService } from '../auth/login.service';\r\n\r\n@Injectable()\r\nexport class TabService {\r\n\r\n  _tabs: Tab[] = [];\r\n\r\n  constructor(private loginService: LoginService, private http: HttpClient) {}\r\n\r\n  addTab(type: string, id: number) {\r\n    for (const t of this._tabs) {\r\n      if ((t.type === type) && (t.id === id)) {\r\n        return;\r\n      }\r\n    }\r\n    this._tabs.push(new Tab(type, id));\r\n  }\r\n\r\n  removeTab(type: string, id: number) {\r\n    this._tabs.forEach((item, index) => {\r\n      if ((item.type === type) && (item.id === id)) {\r\n        this._tabs.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  get tabs() {\r\n    if (!this.loginService.isLogged) {\r\n      this._tabs = [];\r\n    }\r\n    return this._tabs;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div *ngIf=\\\"theme\\\">\\r\\n    <mat-card class=\\\"card\\\" >\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Temas\\\">\\r\\n          <form #themeForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n              <mat-card class=\\\"card\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Tema\\\" [(ngModel)]=\\\"theme.name\\\" #themeFormElement\\r\\n                  #themeFormControl=\\\"ngModel\\\"\\r\\n                  name=\\\"name\\\"\\r\\n                  required>\\r\\n                </mat-form-field>\\r\\n              </mat-card>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div  layout=\\\"row\\\" layout-align=\\\"end center\\\" class=\\\"enterLoginBotton\\\">\\r\\n            <button mat-raised-button class=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"themeForm === undefined || (themeForm && !themeForm.valid)\\\">\\r\\n              Guardar <mat-icon>save</mat-icon>\\r\\n            </button>\\r\\n            <button mat-raised-button class=\\\"button\\\" color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\\r\\n\"","import { ThemeService } from './theme.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Theme } from './theme.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './formTheme.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class FormThemeComponent {\r\n\r\n  newTheme: boolean;\r\n  theme: Theme;\r\n\r\n    constructor(\r\n      private _router: Router,\r\n      activatedRoute: ActivatedRoute,\r\n      private service: ThemeService) {\r\n        const id = activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n          this.service.getTheme(id)\r\n          .subscribe((data: Theme) => this.theme = {\r\n            id: data['id'],\r\n            name: data['name'],\r\n            quotes: data['quotes']\r\n          }\r\n        );\r\n          this.newTheme = false;\r\n        } else {\r\n          this.theme = { name: '', quotes: []};\r\n          this.newTheme = true;\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.service.saveTheme(this.theme).subscribe(\r\n            _ => {},\r\n            (error: Error) => console.error('Error creating new theme: ' + error),\r\n        );\r\n        window.history.back();\r\n    }\r\n\r\n}\r\n","module.exports = \"<body>\\r\\n    <div *ngFor=\\\"let quote of quotes\\\">\\r\\n      <button mat color=\\\"warn\\\"(click)=\\\"add(quote.id)\\\" >\\r\\n        {{quote.quote}}\\r\\n      </button>\\r\\n    </div>\\r\\n</body>\\r\\n\"","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { ThemeService } from './theme.service';\r\nimport { QuoteService } from './../quote/quote.service';\r\nimport { Quote } from './../quote/quote.model';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './selectQuote.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class SelectQuoteComponent implements OnInit {\r\n  quotes: Quote[];\r\n  id: number;\r\n\r\n  constructor(private quoteService: QuoteService, private themeService: ThemeService, activatedRoute: ActivatedRoute,\r\n              private router: Router) {\r\n    this.id = activatedRoute.snapshot.params['id'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.quoteService.getQuotes()\r\n      .subscribe((data: Quote[]) => this.quotes = data['content']\r\n    );\r\n  }\r\n\r\n  add(idQ: number) {\r\n    this.themeService.addQuote(this.id, idQ).subscribe(\r\n      (_) => this.router.navigate(['theme/', this.id]),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<body>\\r\\n\\r\\n  <div>\\r\\n    <mat-card class=\\\"card\\\" >\\r\\n      <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Temas\\\">\\r\\n          <mat-card class=\\\"card\\\" >\\r\\n            <img [src]=\\\"image\\\" alt=\\\"{{theme.name}}Image\\\" class=\\\"themeImage\\\">\\r\\n            <button mat-mini-fab color=\\\"warn\\\" class=\\\"right-button-theme\\\" (click)=\\\"removeTheme()\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"edit\\\" mat-mini-fab color=\\\"primary\\\" class=\\\"right-button-theme\\\" (click)=\\\"save()\\\">\\r\\n              <mat-icon>border_color</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"!edit\\\" mat-mini-fab color=\\\"primary\\\" class=\\\"right-button-theme\\\" (click)=\\\"editTheme()\\\">\\r\\n              <mat-icon>border_color</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-mini-fab color=\\\"accent\\\" class=\\\"right-button-theme\\\" (click)=\\\"fileInput.click()\\\">\\r\\n              <input #fileInput type=\\\"file\\\" [(ngModel)]=\\\"newImage\\\" class=\\\"inputFileButton\\\" (change)=\\\"changeImage(fileInput)\\\">\\r\\n              <mat-icon>insert_photo</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <h1 style=\\\"font-size: 2rem\\\" *ngIf=\\\"!edit\\\">{{theme.name}}</h1>\\r\\n\\r\\n            <form *ngIf=\\\"edit\\\" (keyup.enter)=\\\"save()\\\">\\r\\n              <input style=\\\"font-size: 2rem; margin-top: 1rem;; width: 50%;\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n            </form>\\r\\n\\r\\n          </mat-card>\\r\\n\\r\\n          <div class=\\\"example-large-box mat-elevation-z4\\\" *ngFor = \\\"let quote of theme.quotes\\\">\\r\\n              <mat-card class=\\\"card\\\" >\\r\\n                Referencia cita {{quote.id}}\\r\\n                <button mat-mini-fab color=\\\"warn\\\" *ngIf=\\\"loginService.isAdmin\\\" class=\\\"delete\\\" (click)=\\\"deleteQuote(quote.id, theme.id)\\\" >\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n                <mat-card class=\\\"card\\\">\\r\\n                  {{quote.quote}}\\r\\n                </mat-card>\\r\\n                <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4.5rem\\\" class=\\\"authorAndBook\\\">\\r\\n                  <mat-grid-tile>\\r\\n                    <mat-card class=\\\"card\\\">\\r\\n                      {{quote.author}}\\r\\n                    </mat-card>\\r\\n                  </mat-grid-tile>\\r\\n                  <mat-grid-tile>\\r\\n                    <mat-card class=\\\"card\\\">\\r\\n                      {{quote.book}}\\r\\n                    </mat-card>\\r\\n                  </mat-grid-tile>\\r\\n                </mat-grid-list>\\r\\n              </mat-card>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"example-large-box mat-elevation-z4\\\" *ngIf=\\\"loginService.isAdmin\\\">\\r\\n              <section class=\\\"example-section\\\">\\r\\n                  <mat-checkbox class=\\\"example-margin\\\">Referencia a cita</mat-checkbox>\\r\\n                  <mat-checkbox class=\\\"example-margin\\\">Texto</mat-checkbox>\\r\\n                  <mat-chip-list>\\r\\n                    <mat-chip color=\\\"accent\\\" selected (click)=\\\"add()\\\">Añadir</mat-chip>\\r\\n                  </mat-chip-list>\\r\\n              </section>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n              <mat-card class=\\\"card\\\" >\\r\\n                HTML\\r\\n              </mat-card>\\r\\n              <mat-card class=\\\"card\\\" >\\r\\n                <h3>{{theme.name}}</h3>\\r\\n                <div *ngFor = \\\"let quote of theme.quotes\\\">\\r\\n                  <p>\\\"{{quote.quote}}\\\"</p>\\r\\n                  <p>{{quote.author}} en {{quote.book}}</p>\\r\\n                </div>\\r\\n              </mat-card>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"pdfButton\\\" (click)=\\\"getPDF()\\\">\\r\\n              Generar PDF\\r\\n              <mat-icon>picture_as_pdf</mat-icon>\\r\\n          </button>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</body>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { saveAs } from 'file-saver';\r\nimport { Theme } from './theme.model';\r\nimport { ThemeService } from './theme.service';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { TdDialogService } from '@covalent/core';\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) {}\r\n}\r\n\r\n@Component({\r\n  templateUrl: './theme.component.html',\r\n  styleUrls: [\r\n    '../app.component.css'\r\n  ]\r\n})\r\n\r\nexport class ThemeComponent implements OnInit {\r\n\r\n  theme: Theme;\r\n  image: any;\r\n  newImage: ImageSnippet;\r\n  id: number;\r\n  selectQuote = false;\r\n  edit = false;\r\n  name: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private themeService: ThemeService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loginService: LoginService,\r\n    private _dialogService: TdDialogService,) {\r\n\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.id = params['id'];\r\n      this.themeService.getTheme(this.id)\r\n        .subscribe((data: Theme) => {\r\n          this.theme = {\r\n            id: data['id'],\r\n            name: data['name'],\r\n            quotes: data['quotes']\r\n          };\r\n          this.name = this.theme.name;\r\n        }\r\n      );\r\n\r\n      this.themeService.getImage(this.id)\r\n        .subscribe(data => {\r\n          this.createImageFromBlob(data);\r\n        }, error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  createImageFromBlob(image: Blob) {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n       this.image = reader.result;\r\n    }, false);\r\n\r\n    if (image) {\r\n       reader.readAsDataURL(image);\r\n    }\r\n  }\r\n\r\n  getPDF(){\r\n    this.themeService.getPDF(this.id).subscribe(\r\n      (response) => {\r\n        var mediaType = 'application/pdf';\r\n        var blob = new Blob([response], {type: mediaType});\r\n        saveAs(blob, 'theme.pdf');\r\n      })\r\n  }\r\n\r\n  removeTheme() {\r\n    this._dialogService.openConfirm({\r\n        message: '¿Seguro que desea eliminar el tema ' + this.theme.name + '?',\r\n        title: 'Confirmación',\r\n        cancelButton: 'Cancelar',\r\n        acceptButton: 'Borrar',\r\n        width: '500px',\r\n        height: '175px'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n        if (accept) {\r\n            this.themeService\r\n                .removeTheme(this.theme)\r\n                .subscribe((_) => this.router.navigate(['/']), (error) => console.error(error));\r\n        }\r\n    });\r\n  }\r\n\r\n  editTheme() {\r\n    this.edit = true;\r\n  }\r\n\r\n  add() {\r\n    this.router.navigate(['/theme/selectQuote', this.theme.id]);\r\n  }\r\n\r\n  deleteQuote(idQ: number) {\r\n    this._dialogService.openConfirm({\r\n      message: '¿Seguro que desea eliminar la referencia de esta cita en este tema?',\r\n      title: 'Confirmación',\r\n      cancelButton: 'Cancelar',\r\n      acceptButton: 'Borrar',\r\n      width: '500px',\r\n      height: '200'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n        if (accept) {\r\n          this.themeService.removeQuote(this.theme, idQ).subscribe(\r\n            (_) => this.ngOnInit(),\r\n            (error) => console.log(error));\r\n        }\r\n    });\r\n  }\r\n\r\n  changeImage(imageInput: any) {\r\n    this._dialogService.openConfirm({\r\n      message: '¿Seguro que desea cambiar la imagen de este tema?',\r\n      title: 'Confirmación',\r\n      cancelButton: 'Cancelar',\r\n      acceptButton: 'Aceptar',\r\n      width: '500px',\r\n      height: '200'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n        if (accept) {\r\n          const file: File = imageInput.files[0];\r\n          const reader = new FileReader();\r\n          reader.addEventListener('load', (event: any) => {\r\n            this.newImage = new ImageSnippet(event.target.result, file);\r\n            this.themeService.uploadImage(this.theme.id, this.newImage.file).subscribe(\r\n              _ => {\r\n                this.ngOnInit();\r\n              },\r\n              (error: Error) => console.error('Error creating new image: ' + error),\r\n            );\r\n          });\r\n          reader.readAsDataURL(file);\r\n        }\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.name !== '') {\r\n      this.edit = false;\r\n      this.theme.name = this.name;\r\n      this.themeService.saveTheme(this.theme).subscribe(\r\n          _ => {},\r\n          (error: Error) => console.error('Error creating new theme: ' + error),\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Theme } from './theme.model';\r\n\r\n\r\n@Injectable()\r\nexport class ThemeService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getThemes() {\r\n    return this.http.get('/api/themes/');\r\n  }\r\n\r\n  getSize() {\r\n    return this.http.get('/api/themes/size');\r\n  }\r\n\r\n  getThemesByPage(page: number) {\r\n    return this.http.get('/api/themes/?page=' + page);\r\n  }\r\n\r\n  getTheme(id: number) {\r\n    return this.http.get('/api/themes/' + id);\r\n  }\r\n\r\n  getImage(id: number): Observable<Blob> {\r\n    return this.http.get('/api/themes/' + id + '/image', {responseType: 'blob'});\r\n  }\r\n\r\n  uploadImage(id: number, file: any) {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', file);\r\n\r\n    return this.http.post('api/themes/' + id + '/image', formData);\r\n  }\r\n\r\n  searchTheme(name: string) {\r\n    return this.http.get('/api/themes/search/' + name);\r\n  }\r\n\r\n  saveTheme(theme: Theme): Observable<Theme> {\r\n    const body = JSON.stringify(theme);\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n\r\n    if (!theme.id) {\r\n      return this.http.post<Theme>('/api/themes/', body, { headers });\r\n    } else {\r\n      return this.http.put<Theme>('/api/themes/' + theme.id, body, { headers });\r\n    }\r\n\r\n  }\r\n\r\n  removeTheme(theme: Theme): Observable<Theme> {\r\n    return this.http.delete<Theme>('/api/themes/' + theme.id);\r\n  }\r\n\r\n  getPDF(id: number) {\r\n    return this.http.get('api/themes/' + id + '/PDF', {responseType: 'blob'});\r\n  }\r\n\r\n  addQuote(idT: number, idQ: number): Observable<Theme> {\r\n    return this.http.post<Theme>('/api/themes/' + idT + '/quote/' + idQ, null);\r\n  }\r\n\r\n  removeQuote(theme: Theme, id: number) {\r\n    return this.http.delete('/api/themes/' + theme.id + '/quote/' + id);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\n// Import for Angular Material\r\nimport 'hammerjs';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}